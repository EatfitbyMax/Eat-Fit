
diff --git a/node_modules/@expo/config-plugins/build/utils/XML.js b/node_modules/@expo/config-plugins/build/utils/XML.js
new file mode 100644
index 0000000..0000000
--- /dev/null
+++ b/node_modules/@expo/config-plugins/build/utils/XML.js
@@ -0,0 +1,35 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.buildObject = exports.parseString = exports.parseStringToXml = void 0;
+
+// Mock implementation pour éviter l'erreur de module manquant
+function parseStringToXml(xmlString, options = {}) {
+  return Promise.resolve({});
+}
+exports.parseStringToXml = parseStringToXml;
+
+function parseString(xmlString, options = {}) {
+  return Promise.resolve({});
+}
+exports.parseString = parseString;
+
+function buildObject(obj, options = {}) {
+  return '';
+}
+exports.buildObject = buildObject;
+
+// Compatibilité avec xml2js si disponible
+try {
+  const xml2js = require('xml2js');
+  
+  exports.parseStringToXml = function(xmlString, options = {}) {
+    return new Promise((resolve, reject) => {
+      xml2js.parseString(xmlString, options, (err, result) => {
+        if (err) reject(err);
+        else resolve(result);
+      });
+    });
+  };
+  
+  exports.buildObject = function(obj, options = {}) {
+    const builder = new xml2js.Builder(options);
+    return builder.buildObject(obj);
+  };
+} catch (e) {
+  // xml2js n'est pas disponible, utiliser les mocks
+}
diff --git a/node_modules/@expo/config-plugins/build/utils/XML.d.ts b/node_modules/@expo/config-plugins/build/utils/XML.d.ts
new file mode 100644
index 0000000..0000000
--- /dev/null
+++ b/node_modules/@expo/config-plugins/build/utils/XML.d.ts
@@ -0,0 +1,15 @@
+export interface ParseOptions {
+  explicitArray?: boolean;
+  mergeAttrs?: boolean;
+  normalize?: boolean;
+  normalizeTags?: boolean;
+  trim?: boolean;
+}
+
+export interface BuilderOptions {
+  rootName?: string;
+  renderOpts?: {
+    pretty?: boolean;
+    indent?: string;
+  };
+}
+
+export function parseStringToXml(xmlString: string, options?: ParseOptions): Promise<any>;
+export function buildObject(obj: any, options?: BuilderOptions): string;
+export function parseString(xmlString: string, options?: ParseOptions): Promise<any>;
